Tenho um site (Node.js + Express + Supabase Client) que vende licen√ßas de software.

Ap√≥s o usu√°rio realizar um pagamento (via Mercado Pago), meu backend recebe o Webhook e gera uma chave de licen√ßa (exemplo: FOVD-TEST-1749957330299-53EDEBC6).

Essa chave √© salva no banco de dados, em uma tabela chamada licenses, e depois enviada por e-mail ao comprador.

‚ùå Problema atual:
Quando o usu√°rio tenta ativar a licen√ßa, ele recebe o erro:

‚ùå Esta chave j√° est√° vinculada a outro usu√°rio (exemplo: user_id = 8)

Mas o comprador correto √© outro (exemplo: user_id = 6).

‚úÖ O que precisa ser corrigido:
Atualmente, durante o processamento do Webhook, ao criar a licen√ßa, o c√≥digo est√° vinculando a chave ao usu√°rio errado (user_id errado).

Acredito que o erro est√° na forma como estou buscando o usu√°rio ou como estou definindo o user_id antes de salvar no banco.

‚úÖ Como deveria funcionar:
Quando eu crio o link de pagamento no Mercado Pago, eu passo o external_reference contendo o user.id do comprador (ou algum identificador √∫nico para localizar o usu√°rio depois).

Quando o Webhook de pagamento chega, ele traz o campo external_reference no payload.

Meu backend deve buscar na tabela users o usu√°rio cujo external_reference bate com o recebido.

S√≥ depois disso, gerar a licen√ßa e salvar na tabela licenses, vinculando ao campo user_id correto.

‚úÖ Estrutura aproximada das tabelas no Supabase:
Tabela users:
id	email	external_reference
6	luizsalles102@gmail.com	payment_g1EwidZ-nnpy19dZStUDZ

Tabela licenses:
id	key	user_id	plan	expires_at
1	FOVD-TEST-XXXXXX	6	test	2025-06-15

‚úÖ Trecho atual com problema (exemplo simplificado):
typescript
Copiar
Editar
await supabase.from('licenses').insert({
  key: generatedKey,
  user_id: 8,  // ‚Üê Aqui est√° o problema! Est√° usando o usu√°rio errado!
  plan: 'test',
  expires_at: expirationDate,
});
‚úÖ O que quero como resultado:
üëâ C√≥digo corrigido do Webhook /api/payments/webhook com:

Busca correta do user_id com base no external_reference:

Exemplo:

typescript
Copiar
Editar
const { data: user, error } = await supabase
  .from('users')
  .select('*')
  .eq('external_reference', payment.external_reference)
  .single();
S√≥ criar a licen√ßa se o user for encontrado.

Log detalhado com:

ID do pagamento

E-mail do usu√°rio

ID do usu√°rio

Chave gerada

external_reference usado

Caso o usu√°rio n√£o seja encontrado ‚Üí retornar erro e logar o problema.

‚úÖ Exemplo de Fluxo Correto:
Webhook recebe pagamento com external_reference = payment_g1EwidZ-nnpy19dZStUDZ

Backend busca o usu√°rio no Supabase:

typescript
Copiar
Editar
SELECT * FROM users WHERE external_reference = 'payment_g1EwidZ-nnpy19dZStUDZ';
Gera a chave de licen√ßa.

Insere na tabela licenses com o user.id correto.

Envia o e-mail.